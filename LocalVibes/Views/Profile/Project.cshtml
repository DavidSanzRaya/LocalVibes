@using LocalVibes.Models.ViewModels
@model ProfileProjectViewModel

@{
    ViewData["Title"] = "Local Vibes";
    Layout = "_Layout";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/Views/Shared/MemberCardRow.css" />
    <link rel="stylesheet" href="~/css/Views/Shared/MemberCard.css" />
    <link rel="stylesheet" href="~/css/Views/Shared/ReviewCard.css" />
    <link rel="stylesheet" href="~/css/Views/Shared/Avatar.css" />
    <link rel="stylesheet" href="~/css/Views/Profile/Project.css" />
    <link rel="stylesheet" href="~/css/Views/Shared/SocialMediaCard.css" />
    <style>
        .star {
            font-size: 2rem;
            cursor: pointer;
            color: gold;
        }

        .star-container {
            display: inline-flex;
            gap: 5px;
        }
    </style>
</head>
<body>
    <div class="Profile__page-grid">
        <div class="Profile__photo-section">
            <h1>@Model.Project.ProjectName</h1>
        </div>
        <div class="Profile__left-section">

            <!-- Descripción -->
            <div>
                <h2>DESCRIPCION</h2>
                <p>@Model.Project.Biography</p>
            </div>

            <!-- Géneros musicales -->
            <div class="Profile__left-section__labels">
                @foreach (var genereMusic in Model.Project.GeneresMusic)
                {
                    <app-label text="@genereMusic.GenereMusicName" color="purple" style="width:125px"></app-label>
                }
            </div>

            <!-- Redes sociales -->
            <div>
                @Html.Partial("_SocialMediaCard", new SocialMediaCardModel
               {
                   SocialMedia = new SocialMedia
                   {
                       IdSocialMedia = 1,
                       NameSocialMedia = "Instagram",
                       UrlSocialMedia = "https://www.instagram.com"
                   }
               })
                @Html.Partial("_SocialMediaCard", new SocialMediaCardModel
               {
                   SocialMedia = new SocialMedia
                   {
                       IdSocialMedia = 1,
                       NameSocialMedia = "YouTube",
                       UrlSocialMedia = "https://www.youtube.com"
                   }
               })
            </div>

            <!-- Reseñas -->
            <div>
                <h2>REVIEWS</h2>
                @if (Model.Project.Reviews != null && Model.Project.Reviews.Any())
                {
                    foreach (var review in Model.Project.Reviews)
                    {
                        @Html.Partial("_ReviewCard", new ReviewCardModel { Review = review })
                    }
                }
                else
                {
                    <p>No hay reseñas disponibles.</p>
                }
            </div>

            <!-- Formulario de reseña -->
            <div class="ReviewCard">
                <h2>Deja tu reseña</h2>
                <form method="post" asp-action="AddReview" asp-route-id="@Model.Project.IdProject">
                    <textarea name="reviewText" placeholder="Escribe tu reseña aquí..." required></textarea>

                    <!-- Calificación de 1 a 5 estrellas -->
                    <div>
                        <label for="rating">Calificación:</label>
                        <div id="star-container" class="star-container">
                            <span class="star" data-value="1">☆</span>
                            <span class="star" data-value="2">☆</span>
                            <span class="star" data-value="3">☆</span>
                            <span class="star" data-value="4">☆</span>
                            <span class="star" data-value="5">☆</span>
                        </div>
                        <input type="hidden" id="rating" name="rating" value="0">
                    </div>

                    <button type="submit">Enviar reseña</button>
                </form>
            </div>

            <script>
                const stars = document.querySelectorAll('.star');
                const ratingInput = document.getElementById('rating');

                stars.forEach(star => {
                    star.addEventListener('click', () => {
                        const rating = star.getAttribute('data-value');
                        ratingInput.value = rating;
                        updateStars(rating);
                    });
                });

                function updateStars(rating) {
                    stars.forEach(star => {
                        if (parseInt(star.getAttribute('data-value')) <= rating) {
                            star.textContent = '★';
                        } else {
                            star.textContent = '☆';
                        }
                    });
                }
            </script>

        </div>

        <!-- Miembros -->
        <div class="Profile__right-section p-8" >
            <h2>MIEMBROS</h2>
            @if (Model.Project.MembersOfProjects != null && Model.Project.MembersOfProjects.Any())
            {
                @Html.Partial("_MemberCard", new MemberCardModel { Members = Model.Project.MembersOfProjects })
            }
            else
            {
                <p>No hay miembros disponibles.</p>
            }
        </div>

        <!-- Eventos -->
        <div class="Profile__card-section">
            <h2>EVENTOS</h2>
            @if (Model.Project.EventsProject != null && Model.Project.EventsProject.Any())
            {
                foreach (var evento in Model.Project.EventsProject)
                {
                    <a asp-area="" asp-controller="Profile" asp-action="Event" asp-route-id="@evento.IdEvent" class="Profile__card-section-link">
                        @Html.Partial("_VerticalCard", new CardModel
                        {
                            Title = evento.EventTitle,
                            Subtitle = $"Fecha: {evento.EventDate.ToShortDateString()}",
                            Description = evento.EventDescription,
                            Image = evento.EventImage != null ? evento.EventImage : null // Muestra la imagen si está disponible
                        })
                    </a>
                }
            }
            else
            {
                <p>No hay eventos disponibles.</p>
            }
        </div>

    </div>
</body>
</html>
