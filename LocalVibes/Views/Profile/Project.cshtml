@using LocalVibes.DALs
@using LocalVibes.Models.ViewModels
@model ProfileProjectViewModel

@{
	ViewData["Title"] = "Local Vibes";
	Layout = "_Layout";
	int.TryParse(Context.Session.GetString("ProjectId"), out var sessionProjectId);
}

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>@ViewData["Title"]</title>
	<link rel="stylesheet" href="~/css/Views/Profile/Project.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/css/Views/Shared/Avatar.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/css/Views/Shared/ReviewCard.css" asp-append-version="true" />
	<!-- Otros enlaces de CSS ya definidos -->
</head>
<div class="bodyWhite">

	<div class="container-contenido">
		<!-- Perfil de la banda -->
		<div class="profile-section">
			<!-- Imagen de la banda -->
			@Html.Partial("_Avatar", new AvatarModel { Size = "200px", Image = Model.Project.ProjectImage })
			<h1 class="profile-name profile-name-band">@Model.Project.ProjectName</h1>
			<div class="band-info">
				<div><b>Desde:</b> @Model.Project.FormationDate.Value.ToString("dd/MM/yyyy")</div>
				<div><b>Biografía:</b> @Model.Project.Biography</div>
			</div>

			@if (@Model.Project.IdProject != sessionProjectId)
			{
				<!-- Formulario de añadir a favoritos -->
				<form asp-controller="Profile" asp-action="ToggleFavorite" method="post" class="favorite-form">
					<input type="hidden" name="projectId" value="@Model.Project.IdProject" />
					<button type="submit" id="favorite-button" class="favorite-button">
						<span id="favorite-icon">@(@Model.IsFavorite ? "★" : "☆")</span>
						<span id="favorite-text">@(@Model.IsFavorite ? "En Favoritos" : "Añadir a Favoritos")</span>
					</button>
				</form>
			}
			
			<!-- Géneros musicales -->
			<div><b>Géneros musicales asociados</b></div>
			<div class="genre-tags">
				@if (Model.Project?.GeneresMusic?.Any() == true)
				{
					@foreach (var genereMusic in Model.Project.GeneresMusic)
					{
						<label class="genre-tag" style="width:15vh">@genereMusic.GenereMusicName</label>
					}
				}
				else
				{
					<p>No hay géneros musicales asociados.</p>
				}
			</div>
			
		</div>

		<!-- Miembros de la banda -->
		<div class="band-content">
			<h2 class="section-title" style="margin-top: 2rem;">
				<button type="button" id="toggle-members-btn" class="toggle-button">
					<span id="toggle-icon" class="toggle-icon">▶</span> Miembros de @Model.Project.ProjectName
				</button>
			</h2>
			<div id="band-members-container" class="band-grid" style="max-height: 0; overflow: hidden; transition: max-height 0.5s ease;">
				@if (Model.Project?.MembersOfProjects?.Any() == true)
				{
					@foreach (var member in Model.Project.MembersOfProjects)
					{
						<div class="band-card">
							@if (member.MemberImage == null)
							{
								<img src="~/Assets/Pantera.jpeg" />
							}
							else
							{
								<img src="data:image/jpg;base64,@Convert.ToBase64String(member.MemberImage)" alt="@member.MemberName" />
							}
							<div class="band-card-content">
								<div>
									<h5 class="band-card-title" style="font-size: 1em;">@member.MemberName</h5>
									<p class="band-card-date" style="font-size: 0.7em;">
										@string.Join(", ", member.Instruments.Select(i => i.NameInstrument))
									</p>
								</div>
							</div>
						</div>
					}
				}
				else
				{
					<p>No hay miembros disponibles.</p>
				}
			</div>


			<h2 class="section-title" style="margin-top: 2rem;">Próximos Eventos</h2>
			@if (Model.Project.EventsProject != null && Model.Project.EventsProject.Any())
			{
				foreach (var evento in Model.Project.EventsProject)
				{
					<a asp-area="" asp-controller="Profile" asp-action="Event" asp-route-id="@evento.IdEvent" class="Profile__card-section-link">
						@Html.Partial("_VerticalCard", new CardModel
						{
							Title = evento.EventTitle,
							Subtitle = $"Fecha: {evento.EventDate.ToShortDateString()}",
							Description = evento.EventDescription,
							Image = evento.EventImage != null ? evento.EventImage : null
						})
					</a>
				}
			}
			else
			{
				<p>No hay eventos disponibles.</p>
			}
		</div>

		<!-- Reseñas -->
		<div>
			<h2>REVIEWS</h2>
			@if (Model.Project.Reviews != null && Model.Project.Reviews.Any())
			{
				foreach (var review in Model.Project.Reviews)
				{
					@Html.Partial("_ReviewCard", new ReviewCardModel { Review = review })
				}
			}
			else
			{
				<p>No hay reseñas disponibles.</p>
			}

			@if (@Model.Project.IdProject != sessionProjectId)
			{
				<!-- Formulario de reseña -->
				<div class="ReviewCard">
					<h2>Deja tu reseña</h2>
					<form method="post" asp-action="AddReview" asp-route-id="@Model.Project.IdProject">
						<textarea name="reviewText" placeholder="Escribe tu reseña aquí..." required></textarea>

						<!-- Calificación de 1 a 5 estrellas -->
						<div>
							<label for="rating">Calificación:</label>
							<div id="star-container" class="star-container">
								<span class="star" data-value="1">☆</span>
								<span class="star" data-value="2">☆</span>
								<span class="star" data-value="3">☆</span>
								<span class="star" data-value="4">☆</span>
								<span class="star" data-value="5">☆</span>
							</div>
							<input type="hidden" id="rating" name="rating" value="0">
						</div>

						<button type="submit">Enviar reseña</button>
					</form>
				</div>
			}
		</div>
	</div>
	<script>
    const favoriteButton = document.getElementById('favorite-button');
    const favoriteIcon = document.getElementById('favorite-icon');
    const favoriteText = document.getElementById('favorite-text');
    const isFavorite = @Model.IsFavorite.ToString().ToLower();
	const idProj = @Model.Project.IdProject;

    if (isFavorite) {
        favoriteIcon.textContent = '★'; // Estrella llena
        favoriteText.textContent = 'En Favoritos';
    }
</script>
</div>



<script src="~/js/View/Profile/project.js"></script>
